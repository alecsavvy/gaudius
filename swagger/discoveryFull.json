{
  "swagger": "2.0",
  "basePath": "/v1/full",
  "paths": {
    "/playlists/by_permalink/{handle}/{slug}": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_playlist_response"
            }
          }
        },
        "description": "Get a playlist by handle and slug",
        "operationId": "Get Playlist By Handle and Slug",
        "parameters": [
          {
            "name": "handle",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "playlist owner handle"
          },
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "playlist slug"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          }
        ],
        "tags": [
          "playlists"
        ]
      }
    },
    "/playlists/trending": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_trending_playlists_response"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Returns trending playlists for a time period",
        "operationId": "Get Trending Playlists",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "time",
            "in": "query",
            "type": "string",
            "enum": [
              "week",
              "month",
              "year",
              "allTime"
            ],
            "description": "Calculate trending over a specified time range"
          }
        ],
        "tags": [
          "playlists"
        ]
      }
    },
    "/playlists/trending/{version}": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_trending_playlists_response"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Returns trending playlists for a time period based on the given trending version",
        "operationId": "Get Trending Playlists With Version",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The strategy version of trending to use"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "time",
            "in": "query",
            "type": "string",
            "enum": [
              "week",
              "month",
              "year",
              "allTime"
            ],
            "description": "Calculate trending over a specified time range"
          }
        ],
        "tags": [
          "playlists"
        ]
      }
    },
    "/playlists/{playlist_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_playlist_response"
            }
          }
        },
        "description": "Get a playlist by ID",
        "operationId": "Get Playlist",
        "parameters": [
          {
            "name": "playlist_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A Playlist ID"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          }
        ],
        "tags": [
          "playlists"
        ]
      }
    },
    "/playlists/{playlist_id}/favorites": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/following_response"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Get users that favorited a playlist",
        "operationId": "Get Users From Playlist Favorites",
        "parameters": [
          {
            "name": "playlist_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A Playlist ID"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          }
        ],
        "tags": [
          "playlists"
        ]
      }
    },
    "/playlists/{playlist_id}/reposts": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/following_response"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Get users that reposted a playlist",
        "operationId": "Get Users From Playlist Reposts",
        "parameters": [
          {
            "name": "playlist_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A Playlist ID"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          }
        ],
        "tags": [
          "playlists"
        ]
      }
    },
    "/playlists/{playlist_id}/tracks": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_playlist_tracks_response"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Fetch tracks within a playlist.",
        "operationId": "Get Playlist Tracks",
        "parameters": [
          {
            "name": "playlist_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A Playlist ID"
          }
        ],
        "tags": [
          "playlists"
        ]
      }
    },
    "/reactions": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "No such reaction"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Gets reactions by reacted_to_id and type",
        "operationId": "Bulk get Reactions",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "type": "string",
            "description": "The type of reactions for which to query."
          },
          {
            "name": "reacted_to_ids",
            "in": "query",
            "type": "array",
            "required": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "The `reacted_to` transaction id(s) of the reactions in question."
          }
        ],
        "tags": [
          "reactions"
        ]
      }
    },
    "/search/autocomplete": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/search_autocomplete_response"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "summary": "Get Users/Tracks/Playlists/Albums that best match the search query",
        "description": "Same as search but optimized for quicker response at the cost of some entity information.",
        "operationId": "Search Autocomplete",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "query",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "The search query"
          },
          {
            "name": "kind",
            "in": "query",
            "type": "string",
            "default": "all",
            "enum": [
              "all",
              "users",
              "tracks",
              "playlists",
              "albums"
            ],
            "description": "The type of response, one of: all, users, tracks, playlists, or albums"
          },
          {
            "name": "includePurchaseable",
            "in": "query",
            "type": "string",
            "description": "Whether or not to include purchaseable content"
          }
        ],
        "tags": [
          "search"
        ]
      }
    },
    "/search/full": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/search_full_response"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Get Users/Tracks/Playlists/Albums that best match the search query",
        "operationId": "Search",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "query",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "The search query"
          },
          {
            "name": "kind",
            "in": "query",
            "type": "string",
            "default": "all",
            "enum": [
              "all",
              "users",
              "tracks",
              "playlists",
              "albums"
            ],
            "description": "The type of response, one of: all, users, tracks, playlists, or albums"
          },
          {
            "name": "includePurchaseable",
            "in": "query",
            "type": "string",
            "description": "Whether or not to include purchaseable content"
          }
        ],
        "tags": [
          "search"
        ]
      }
    },
    "/tips": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/get_tips_response"
            }
          }
        },
        "description": "Gets the most recent tips on the network",
        "operationId": "Get Tips",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "receiver_min_followers",
            "in": "query",
            "type": "integer",
            "default": 0,
            "description": "Only include tips to recipients that have this many followers"
          },
          {
            "name": "receiver_is_verified",
            "in": "query",
            "type": "boolean",
            "default": false,
            "description": "Only include tips to recipients that are verified"
          },
          {
            "name": "current_user_follows",
            "in": "query",
            "type": "string",
            "enum": [
              "sender",
              "receiver",
              "sender_or_receiver"
            ],
            "description": "Only include tips involving the user's followers in the given capacity. Requires user_id to be set."
          },
          {
            "name": "unique_by",
            "in": "query",
            "type": "string",
            "enum": [
              "sender",
              "receiver"
            ],
            "description": "Only include the most recent tip for a user was involved in the given capacity.\n\nEg. 'sender' will ensure that each tip returned has a unique sender, using the most recent tip sent by a user if that user has sent multiple tips.\n    "
          },
          {
            "name": "min_slot",
            "in": "query",
            "type": "integer",
            "default": 0,
            "description": "The minimum Solana slot to pull tips from"
          },
          {
            "name": "max_slot",
            "in": "query",
            "type": "integer",
            "default": 0,
            "description": "The maximum Solana slot to pull tips from"
          },
          {
            "name": "tx_signatures",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A list of transaction signatures of tips to fetch"
          }
        ],
        "tags": [
          "tips"
        ]
      }
    },
    "/tracks": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_tracks_response"
            }
          }
        },
        "description": "Gets a list of tracks using their IDs or permalinks",
        "operationId": "Get Bulk Tracks",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "permalink",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The permalink of the track(s)"
          },
          {
            "name": "id",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The ID of the track(s)"
          }
        ],
        "tags": [
          "tracks"
        ]
      }
    },
    "/tracks/best_new_releases": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_tracks_response"
            }
          }
        },
        "description": "Gets the tracks found on the \"Best New Releases\" smart playlist",
        "operationId": "Best New Releases",
        "tags": [
          "tracks"
        ]
      }
    },
    "/tracks/feeling_lucky": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_tracks_response"
            }
          }
        },
        "description": "Gets random tracks found on the \"Feeling Lucky\" smart playlist",
        "operationId": "Get Feeling Lucky Tracks",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "default": 25,
            "description": "Number of tracks to fetch"
          },
          {
            "name": "with_users",
            "in": "query",
            "type": "boolean",
            "default": false,
            "description": "Boolean to include user info with tracks"
          },
          {
            "name": "min_followers",
            "in": "query",
            "type": "integer",
            "default": 100,
            "description": "Fetch tracks from users with at least this number of followers"
          }
        ],
        "tags": [
          "tracks"
        ]
      }
    },
    "/tracks/most_loved": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_tracks_response"
            }
          }
        },
        "description": "Gets the tracks found on the \"Most Loved\" smart playlist",
        "operationId": "Get Most Loved Tracks",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "default": 25,
            "description": "Number of tracks to fetch"
          },
          {
            "name": "with_users",
            "in": "query",
            "type": "boolean",
            "description": "Boolean to include user info with tracks"
          }
        ],
        "tags": [
          "tracks"
        ]
      }
    },
    "/tracks/recommended": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_tracks_response"
            }
          }
        },
        "description": "Get recommended tracks",
        "operationId": "Get Recommended Tracks",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "genre",
            "in": "query",
            "type": "string",
            "description": "Filter trending to a specified genre"
          },
          {
            "name": "time",
            "in": "query",
            "type": "string",
            "enum": [
              "week",
              "month",
              "year",
              "allTime"
            ],
            "description": "Calculate trending over a specified time range"
          },
          {
            "name": "exclusion_list",
            "in": "query",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "List of track ids to exclude"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          }
        ],
        "tags": [
          "tracks"
        ]
      }
    },
    "/tracks/recommended/{version}": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_tracks_response"
            }
          }
        },
        "description": "Get recommended tracks using the given trending strategy version",
        "operationId": "Get Recommended Tracks With Version",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The strategy version of trending to use"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "genre",
            "in": "query",
            "type": "string",
            "description": "Filter trending to a specified genre"
          },
          {
            "name": "time",
            "in": "query",
            "type": "string",
            "enum": [
              "week",
              "month",
              "year",
              "allTime"
            ],
            "description": "Calculate trending over a specified time range"
          },
          {
            "name": "exclusion_list",
            "in": "query",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "List of track ids to exclude"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          }
        ],
        "tags": [
          "tracks"
        ]
      }
    },
    "/tracks/remixables": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_track_response"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Gets a list of tracks that have stems available for remixing",
        "operationId": "Get Remixable Tracks",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "with_users",
            "in": "query",
            "type": "boolean",
            "description": "Boolean to include user info with tracks"
          }
        ],
        "tags": [
          "tracks"
        ]
      }
    },
    "/tracks/trending": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_tracks_response"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Gets the top 100 trending (most popular) tracks on Audius",
        "operationId": "Get Trending Tracks",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "genre",
            "in": "query",
            "type": "string",
            "description": "Filter trending to a specified genre"
          },
          {
            "name": "time",
            "in": "query",
            "type": "string",
            "enum": [
              "week",
              "month",
              "year",
              "allTime"
            ],
            "description": "Calculate trending over a specified time range"
          }
        ],
        "tags": [
          "tracks"
        ]
      }
    },
    "/tracks/trending/ids": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/trending_ids_response"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Gets the track IDs of the top trending tracks on Audius",
        "operationId": "Get Trending Track IDs",
        "parameters": [
          {
            "name": "genre",
            "in": "query",
            "type": "string",
            "description": "Filter trending to a specified genre"
          }
        ],
        "tags": [
          "tracks"
        ]
      }
    },
    "/tracks/trending/ids/{version}": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/trending_ids_response"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Gets the track IDs of the top trending tracks on Audius based on the given trending strategy version",
        "operationId": "Get Trending Tracks IDs With Version",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The strategy version of trending to use"
          },
          {
            "name": "genre",
            "in": "query",
            "type": "string",
            "description": "Filter trending to a specified genre"
          }
        ],
        "tags": [
          "tracks"
        ]
      }
    },
    "/tracks/trending/underground": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_tracks_response"
            }
          }
        },
        "description": "Gets the top 100 trending underground tracks on Audius",
        "operationId": "Get Underground Trending Tracks",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          }
        ],
        "tags": [
          "tracks"
        ]
      }
    },
    "/tracks/trending/underground/{version}": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_tracks_response"
            }
          }
        },
        "description": "Gets the top 100 trending underground tracks on Audius using a given trending strategy version",
        "operationId": "Get Underground Trending Tracks With Version",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The strategy version of trending to user"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          }
        ],
        "tags": [
          "tracks"
        ]
      }
    },
    "/tracks/trending/{version}": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_tracks_response"
            }
          }
        },
        "description": "Gets the top 100 trending (most popular) tracks on Audius using a given trending strategy version",
        "operationId": "Get Trending Tracks With Version",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The strategy version of trending to use"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "genre",
            "in": "query",
            "type": "string",
            "description": "Filter trending to a specified genre"
          },
          {
            "name": "time",
            "in": "query",
            "type": "string",
            "enum": [
              "week",
              "month",
              "year",
              "allTime"
            ],
            "description": "Calculate trending over a specified time range"
          }
        ],
        "tags": [
          "tracks"
        ]
      }
    },
    "/tracks/under_the_radar": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_tracks_response"
            }
          }
        },
        "description": "Gets the tracks found on the \"Under the Radar\" smart playlist",
        "operationId": "Get Under the Radar Tracks",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "filter",
            "in": "query",
            "type": "string",
            "default": "all",
            "enum": [
              "all",
              "repost",
              "original"
            ],
            "description": "Filters for activity that is original vs reposts"
          },
          {
            "name": "tracks_only",
            "in": "query",
            "type": "boolean",
            "description": "Whether to only include tracks"
          },
          {
            "name": "with_users",
            "in": "query",
            "type": "boolean",
            "description": "Boolean to include user info with tracks"
          }
        ],
        "tags": [
          "tracks"
        ]
      }
    },
    "/tracks/usdc-purchase": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_tracks_response"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Gets the top trending (most popular) USDC purchase tracks on Audius",
        "operationId": "Get Trending USDC Purchase Tracks",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "genre",
            "in": "query",
            "type": "string",
            "description": "Filter trending to a specified genre"
          },
          {
            "name": "time",
            "in": "query",
            "type": "string",
            "enum": [
              "week",
              "month",
              "year",
              "allTime"
            ],
            "description": "Calculate trending over a specified time range"
          }
        ],
        "tags": [
          "tracks"
        ]
      }
    },
    "/tracks/usdc-purchase/{version}": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_tracks_response"
            }
          }
        },
        "description": "Gets the top trending (most popular) USDC purchase tracks on Audius using a given trending strategy version",
        "operationId": "Get Trending USDC Purchase Tracks With Version",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The strategy version of trending to use"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "genre",
            "in": "query",
            "type": "string",
            "description": "Filter trending to a specified genre"
          },
          {
            "name": "time",
            "in": "query",
            "type": "string",
            "enum": [
              "week",
              "month",
              "year",
              "allTime"
            ],
            "description": "Calculate trending over a specified time range"
          }
        ],
        "tags": [
          "tracks"
        ]
      }
    },
    "/tracks/{track_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_track_response"
            }
          }
        },
        "description": "Gets a track by ID. If `show_unlisted` is true, then `handle` and `url_title` are required.",
        "operationId": "Get Track",
        "parameters": [
          {
            "name": "track_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A Track ID"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "handle",
            "in": "query",
            "type": "string",
            "description": "The User handle of the track owner"
          },
          {
            "name": "url_title",
            "in": "query",
            "type": "string",
            "description": "The URLized title of the track"
          },
          {
            "name": "show_unlisted",
            "in": "query",
            "type": "boolean",
            "description": "Whether or not to show unlisted tracks"
          }
        ],
        "tags": [
          "tracks"
        ]
      }
    },
    "/tracks/{track_id}/favorites": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/track_favorites_response_full"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Get users that favorited a track",
        "operationId": "Get Users From Favorites",
        "parameters": [
          {
            "name": "track_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A Track ID"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          }
        ],
        "tags": [
          "tracks"
        ]
      }
    },
    "/tracks/{track_id}/remixes": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/remixes_response_full"
            }
          }
        },
        "description": "Get all tracks that remix the given track",
        "operationId": "Get Track Remixes",
        "parameters": [
          {
            "name": "track_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A Track ID"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          }
        ],
        "tags": [
          "tracks"
        ]
      }
    },
    "/tracks/{track_id}/remixing": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/remixing_response"
            }
          }
        },
        "description": "Gets all the tracks that the given track remixes",
        "operationId": "Get Track Remix Parents",
        "parameters": [
          {
            "name": "track_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A Track ID"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          }
        ],
        "tags": [
          "tracks"
        ]
      }
    },
    "/tracks/{track_id}/reposts": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/track_reposts_response_full"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Get the users that reposted a track",
        "operationId": "Get Users From Reposts",
        "parameters": [
          {
            "name": "track_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A Track ID"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          }
        ],
        "tags": [
          "tracks"
        ]
      }
    },
    "/tracks/{track_id}/stems": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/stems_response"
            }
          }
        },
        "description": "Get the remixable stems of a track",
        "operationId": "Get Track Stems",
        "parameters": [
          {
            "name": "track_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A Track ID"
          }
        ],
        "tags": [
          "tracks"
        ]
      }
    },
    "/tracks/{user_id}/nft-gated-signatures": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "description": "Gets premium track signatures for passed in premium track ids",
        "operationId": "Get Premium Track Signatures",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user for whom we are generating premium track signatures."
          },
          {
            "name": "track_ids",
            "in": "query",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "A list of track ids. The order of these track ids will match the order of the token ids."
          },
          {
            "name": "token_ids",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A list of ERC1155 token ids. The order of these token ids will match the order of the track ids.\n        There may be multiple token ids for a given track id, so we use a '-' as the delimiter for a track id's token ids."
          }
        ],
        "tags": [
          "tracks"
        ]
      }
    },
    "/transactions": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/transaction_history_response"
            }
          }
        },
        "summary": "Gets the user's $AUDIO transaction history within the App",
        "description": "Deprecated: Use `/users/{id}/transactions/audio` or `sdk.full.users.getAudioTransactions()` instead.",
        "operationId": "Get Audio Transaction History",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "sort_method",
            "in": "query",
            "type": "string",
            "default": "date",
            "enum": [
              "date",
              "transaction_type"
            ],
            "description": "The sort method"
          },
          {
            "name": "sort_direction",
            "in": "query",
            "type": "string",
            "default": "desc",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "The sort direction"
          },
          {
            "name": "Encoded-Data-Message",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "The data that was signed by the user for signature recovery"
          },
          {
            "name": "Encoded-Data-Signature",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "The signature of data, used for signature recovery"
          }
        ],
        "deprecated": true,
        "tags": [
          "transactions"
        ]
      }
    },
    "/transactions/count": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/transaction_history_count_response"
            }
          }
        },
        "summary": "Gets the count of the user's $AUDIO transaction history within the App",
        "description": "Deprecated: Use `/users/{id}/transactions/audio/count` or `sdk.full.users.getAudioTransactionCount()` instead.",
        "operationId": "Get Audio Transaction History Count",
        "parameters": [
          {
            "name": "Encoded-Data-Message",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "The data that was signed by the user for signature recovery"
          },
          {
            "name": "Encoded-Data-Signature",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "The signature of data, used for signature recovery"
          }
        ],
        "deprecated": true,
        "tags": [
          "transactions"
        ]
      }
    },
    "/users/genre/top": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/top_genre_users_response_full"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Get the Top Users for a Given Genre",
        "operationId": "Get Top Users In Genre",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "genre",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "List of Genres"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/handle/{handle}": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_user_response"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Gets a single user by their handle",
        "operationId": "Get User by Handle",
        "parameters": [
          {
            "name": "handle",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User handle"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/handle/{handle}/reposts": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_reposts"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Gets the user's reposts by the user handle",
        "operationId": "Get Reposts by Handle",
        "parameters": [
          {
            "name": "handle",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User handle"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/handle/{handle}/tracks": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_tracks"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Gets the tracks created by a user using the user's handle",
        "operationId": "Get Tracks by User Handle",
        "parameters": [
          {
            "name": "handle",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User handle"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "default": "date",
            "enum": [
              "date",
              "plays"
            ],
            "description": "[Deprecated] Field to sort by"
          },
          {
            "name": "query",
            "in": "query",
            "type": "string",
            "description": "The filter query"
          },
          {
            "name": "sort_method",
            "in": "query",
            "type": "string",
            "enum": [
              "title",
              "artist_name",
              "release_date",
              "last_listen_date",
              "added_date",
              "plays",
              "reposts",
              "saves",
              "most_listens_by_user"
            ],
            "description": "The sort method"
          },
          {
            "name": "sort_direction",
            "in": "query",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "The sort direction"
          },
          {
            "name": "filter_tracks",
            "in": "query",
            "type": "string",
            "default": "all",
            "enum": [
              "all",
              "public",
              "unlisted"
            ],
            "description": "Filter by unlisted or public tracks"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/handle/{handle}/tracks/ai_attributed": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_tracks"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Gets the AI generated tracks attributed to a user using the user's handle",
        "operationId": "Get AI Attributed Tracks by User Handle",
        "parameters": [
          {
            "name": "handle",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User handle"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "default": "date",
            "enum": [
              "date",
              "plays"
            ],
            "description": "[Deprecated] Field to sort by"
          },
          {
            "name": "query",
            "in": "query",
            "type": "string",
            "description": "The filter query"
          },
          {
            "name": "sort_method",
            "in": "query",
            "type": "string",
            "enum": [
              "title",
              "artist_name",
              "release_date",
              "last_listen_date",
              "added_date",
              "plays",
              "reposts",
              "saves",
              "most_listens_by_user"
            ],
            "description": "The sort method"
          },
          {
            "name": "sort_direction",
            "in": "query",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "The sort direction"
          },
          {
            "name": "filter_tracks",
            "in": "query",
            "type": "string",
            "default": "all",
            "enum": [
              "all",
              "public",
              "unlisted"
            ],
            "description": "Filter by unlisted or public tracks"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/subscribers": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_bulk_subscribers_response"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "All users that subscribe to the provided users",
        "operationId": "Bulk Get Subscribers",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "type": "array",
            "required": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "User IDs to fetch subscribers for"
          }
        ],
        "tags": [
          "users"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_bulk_subscribers_response"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Get all users that subscribe to the users listed in the JSON request",
        "operationId": "Bulk Get Subscribers via JSON request",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "type": "array",
            "required": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "User IDs to fetch subscribers for"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/top": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/top_users_response_full"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Get the Top Users having at least one track by follower count",
        "operationId": "Get Top Users",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_user_response"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Gets a single user by their user ID",
        "operationId": "Get User",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User ID"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/favorites/tracks": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/track_library_response_full"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Gets a user's favorite tracks",
        "operationId": "Get Favorites",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User ID"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "query",
            "in": "query",
            "type": "string",
            "description": "The filter query"
          },
          {
            "name": "sort_method",
            "in": "query",
            "type": "string",
            "enum": [
              "title",
              "artist_name",
              "release_date",
              "last_listen_date",
              "added_date",
              "plays",
              "reposts",
              "saves",
              "most_listens_by_user"
            ],
            "description": "The sort method"
          },
          {
            "name": "sort_direction",
            "in": "query",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "The sort direction"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/followers": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_followers_response"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "All users that follow the provided user",
        "operationId": "Get Followers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User ID"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/following": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/following_response_full"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "All users that the provided user follows",
        "operationId": "Get Following",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User ID"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/history/tracks": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/history_response_full"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Get the tracks the user recently listened to.",
        "operationId": "Get User's Track History",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User ID"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "query",
            "in": "query",
            "type": "string",
            "description": "The filter query"
          },
          {
            "name": "sort_method",
            "in": "query",
            "type": "string",
            "enum": [
              "title",
              "artist_name",
              "release_date",
              "last_listen_date",
              "added_date",
              "plays",
              "reposts",
              "saves",
              "most_listens_by_user"
            ],
            "description": "The sort method"
          },
          {
            "name": "sort_direction",
            "in": "query",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "The sort direction"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/library/albums": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/collection_library_response_full"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "summary": "Fetch a user's full library playlists",
        "description": "Gets a user's saved/reposted/purchased/all albums",
        "operationId": "Get User Library Albums",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A user ID"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "query",
            "in": "query",
            "type": "string",
            "description": "The filter query"
          },
          {
            "name": "sort_direction",
            "in": "query",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "The sort direction"
          },
          {
            "name": "type",
            "in": "query",
            "type": "string",
            "default": "favorite",
            "enum": [
              "all",
              "repost",
              "favorite",
              "purchase"
            ],
            "description": "The type of entity to return: favorited, reposted, purchased, or all. Defaults to favorite"
          },
          {
            "name": "Encoded-Data-Message",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "The data that was signed by the user for signature recovery"
          },
          {
            "name": "Encoded-Data-Signature",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "The signature of data, used for signature recovery"
          },
          {
            "name": "sort_method",
            "in": "query",
            "type": "string",
            "enum": [
              "added_date",
              "reposts",
              "saves"
            ],
            "description": "The sort method"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/library/playlists": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/collection_library_response_full"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "summary": "Fetch a user's full library playlists",
        "description": "Gets a user's saved/reposted/purchased/all playlists",
        "operationId": "Get User Library Playlists",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A user ID"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "query",
            "in": "query",
            "type": "string",
            "description": "The filter query"
          },
          {
            "name": "sort_direction",
            "in": "query",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "The sort direction"
          },
          {
            "name": "type",
            "in": "query",
            "type": "string",
            "default": "favorite",
            "enum": [
              "all",
              "repost",
              "favorite",
              "purchase"
            ],
            "description": "The type of entity to return: favorited, reposted, purchased, or all. Defaults to favorite"
          },
          {
            "name": "Encoded-Data-Message",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "The data that was signed by the user for signature recovery"
          },
          {
            "name": "Encoded-Data-Signature",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "The signature of data, used for signature recovery"
          },
          {
            "name": "sort_method",
            "in": "query",
            "type": "string",
            "enum": [
              "added_date",
              "reposts",
              "saves"
            ],
            "description": "The sort method"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/library/tracks": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/track_library_response_full"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "summary": "Fetch a user's full library tracks",
        "description": "Gets a user's saved/reposted/purchased/all tracks",
        "operationId": "Get User Library Tracks",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A user ID"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "query",
            "in": "query",
            "type": "string",
            "description": "The filter query"
          },
          {
            "name": "sort_method",
            "in": "query",
            "type": "string",
            "enum": [
              "title",
              "artist_name",
              "release_date",
              "last_listen_date",
              "added_date",
              "plays",
              "reposts",
              "saves",
              "most_listens_by_user"
            ],
            "description": "The sort method"
          },
          {
            "name": "sort_direction",
            "in": "query",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "The sort direction"
          },
          {
            "name": "type",
            "in": "query",
            "type": "string",
            "default": "favorite",
            "enum": [
              "all",
              "repost",
              "favorite",
              "purchase"
            ],
            "description": "The type of entity to return: favorited, reposted, purchased, or all. Defaults to favorite"
          },
          {
            "name": "Encoded-Data-Message",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "The data that was signed by the user for signature recovery"
          },
          {
            "name": "Encoded-Data-Signature",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "The signature of data, used for signature recovery"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/purchases": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/purchases_response"
            }
          }
        },
        "description": "Gets the purchases the user has made",
        "operationId": "Get Purchases",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User ID"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "sort_method",
            "in": "query",
            "type": "string",
            "enum": [
              "content_title",
              "artist_name",
              "buyer_name",
              "date"
            ],
            "description": "The sort direction"
          },
          {
            "name": "sort_direction",
            "in": "query",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "The sort direction"
          },
          {
            "name": "Encoded-Data-Message",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "The data that was signed by the user for signature recovery"
          },
          {
            "name": "Encoded-Data-Signature",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "The signature of data, used for signature recovery"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/purchases/count": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/purchases_count_response"
            }
          }
        },
        "description": "Gets the count of purchases the user has made",
        "operationId": "Get Purchases Count",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User ID"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "Encoded-Data-Message",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "The data that was signed by the user for signature recovery"
          },
          {
            "name": "Encoded-Data-Signature",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "The signature of data, used for signature recovery"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/related": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/related_artist_response_full"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Gets a list of users that might be of interest to followers of this user.",
        "operationId": "Get Related Users",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User ID"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/replica_set": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/users_by_content_node"
            }
          }
        },
        "description": "Gets the user's replica set",
        "operationId": "Get User Replica Set",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User ID"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/reposts": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_reposts"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Gets the given user's reposts",
        "operationId": "Get Reposts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User ID"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/sales": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/purchases_response"
            }
          }
        },
        "description": "Gets the sales the user has made",
        "operationId": "Get Sales",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User ID"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "sort_method",
            "in": "query",
            "type": "string",
            "enum": [
              "content_title",
              "artist_name",
              "buyer_name",
              "date"
            ],
            "description": "The sort direction"
          },
          {
            "name": "sort_direction",
            "in": "query",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "The sort direction"
          },
          {
            "name": "Encoded-Data-Message",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "The data that was signed by the user for signature recovery"
          },
          {
            "name": "Encoded-Data-Signature",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "The signature of data, used for signature recovery"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/sales/count": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/purchases_count_response"
            }
          }
        },
        "description": "Gets the count of sales the user has made",
        "operationId": "Get Sales Count",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User ID"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "Encoded-Data-Message",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "The data that was signed by the user for signature recovery"
          },
          {
            "name": "Encoded-Data-Signature",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "The signature of data, used for signature recovery"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/subscribers": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_subscribers_response"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "All users that subscribe to the provided user",
        "operationId": "Get Subscribers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User ID"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/supporters": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_get_supporters"
            }
          }
        },
        "description": "Gets the supporters of the given user",
        "operationId": "Get Supporters",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User ID"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/supporters/{supporter_user_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_get_supporter"
            }
          }
        },
        "description": "Gets the specified supporter of the given user",
        "operationId": "Get Supporter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User ID"
          },
          {
            "name": "supporter_user_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User ID of a supporter"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/supporting": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_get_supporting"
            }
          }
        },
        "description": "Gets the users that the given user supports",
        "operationId": "Get Supportings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User ID"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/supporting/{supported_user_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_get_supporting"
            }
          }
        },
        "description": "Gets the support from the given user to the supported user",
        "operationId": "Get Supporting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User ID"
          },
          {
            "name": "supported_user_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User ID of a supported user"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/tracks": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/full_tracks"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "description": "Gets the tracks created by a user using their user ID",
        "operationId": "Get Tracks by User",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User ID"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "description": "The user ID of the user making the request"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "default": "date",
            "enum": [
              "date",
              "plays"
            ],
            "description": "[Deprecated] Field to sort by"
          },
          {
            "name": "query",
            "in": "query",
            "type": "string",
            "description": "The filter query"
          },
          {
            "name": "sort_method",
            "in": "query",
            "type": "string",
            "enum": [
              "title",
              "artist_name",
              "release_date",
              "last_listen_date",
              "added_date",
              "plays",
              "reposts",
              "saves",
              "most_listens_by_user"
            ],
            "description": "The sort method"
          },
          {
            "name": "sort_direction",
            "in": "query",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "The sort direction"
          },
          {
            "name": "filter_tracks",
            "in": "query",
            "type": "string",
            "default": "all",
            "enum": [
              "all",
              "public",
              "unlisted"
            ],
            "description": "Filter by unlisted or public tracks"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/transactions/audio": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/transaction_history_response"
            }
          }
        },
        "description": "Gets the user's $AUDIO transaction history within the App",
        "operationId": "Get Audio Transactions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User ID"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "sort_method",
            "in": "query",
            "type": "string",
            "default": "date",
            "enum": [
              "date",
              "transaction_type"
            ],
            "description": "The sort method"
          },
          {
            "name": "sort_direction",
            "in": "query",
            "type": "string",
            "default": "desc",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "The sort direction"
          },
          {
            "name": "Encoded-Data-Message",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "The data that was signed by the user for signature recovery"
          },
          {
            "name": "Encoded-Data-Signature",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "The signature of data, used for signature recovery"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/transactions/audio/count": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/transaction_history_count_response"
            }
          }
        },
        "description": "Gets the count of the user's $AUDIO transaction history within the App",
        "operationId": "Get Audio Transaction Count",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User ID"
          },
          {
            "name": "Encoded-Data-Message",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "The data that was signed by the user for signature recovery"
          },
          {
            "name": "Encoded-Data-Signature",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "The signature of data, used for signature recovery"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/transactions/usdc": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/transaction_history_response"
            }
          }
        },
        "description": "Gets the user's $USDC transaction history within the App",
        "operationId": "Get USDC Transactions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User ID"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "The number of items to skip. Useful for pagination (page number * limit)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "The number of items to fetch"
          },
          {
            "name": "sort_method",
            "in": "query",
            "type": "string",
            "default": "date",
            "enum": [
              "date",
              "transaction_type"
            ],
            "description": "The sort method"
          },
          {
            "name": "sort_direction",
            "in": "query",
            "type": "string",
            "default": "desc",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "The sort direction"
          },
          {
            "name": "Encoded-Data-Message",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "The data that was signed by the user for signature recovery"
          },
          {
            "name": "Encoded-Data-Signature",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "The signature of data, used for signature recovery"
          },
          {
            "name": "type",
            "in": "query",
            "type": "string",
            "enum": [
              "purchase_content",
              "transfer",
              "purchase_stripe"
            ],
            "description": "Filters the type of transactions to show"
          },
          {
            "name": "method",
            "in": "query",
            "type": "string",
            "enum": [
              "send",
              "receive"
            ],
            "description": "Filters the method (sent/received) of transactions to show"
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}/transactions/usdc/count": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/transaction_history_count_response"
            }
          }
        },
        "description": "Gets the count of the user's $USDC transaction history within the App",
        "operationId": "Get USDC Transaction Count",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A User ID"
          },
          {
            "name": "type",
            "in": "query",
            "type": "string",
            "enum": [
              "purchase_content",
              "transfer",
              "purchase_stripe"
            ],
            "description": "Filters the type of transactions to show"
          },
          {
            "name": "method",
            "in": "query",
            "type": "string",
            "enum": [
              "send",
              "receive"
            ],
            "description": "Filters the method (sent/received) of transactions to show"
          },
          {
            "name": "Encoded-Data-Message",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "The data that was signed by the user for signature recovery"
          },
          {
            "name": "Encoded-Data-Signature",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "The signature of data, used for signature recovery"
          }
        ],
        "tags": [
          "users"
        ]
      }
    }
  },
  "info": {
    "title": "API",
    "version": "1.0"
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "tags": [
    {
      "name": "tracks",
      "description": "Full track operations"
    },
    {
      "name": "playlists",
      "description": "Full playlist related operations"
    },
    {
      "name": "users",
      "description": "Full user operations"
    },
    {
      "name": "search",
      "description": "Full search operations"
    },
    {
      "name": "tips",
      "description": "Full tip related operations"
    },
    {
      "name": "reactions",
      "description": "Reaction related operations"
    },
    {
      "name": "transactions",
      "description": "Full transaction history related operations"
    }
  ],
  "definitions": {
    "full_track_response": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "$ref": "#/definitions/track_full"
        }
      },
      "type": "object"
    },
    "version_metadata": {
      "required": [
        "service",
        "version"
      ],
      "properties": {
        "service": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "track_full": {
      "required": [
        "blocknumber",
        "duration",
        "favorite_count",
        "followee_favorites",
        "followee_reposts",
        "has_current_user_reposted",
        "has_current_user_saved",
        "id",
        "is_unlisted",
        "play_count",
        "repost_count",
        "route_id",
        "title",
        "user",
        "user_id"
      ],
      "properties": {
        "artwork": {
          "$ref": "#/definitions/track_artwork"
        },
        "description": {
          "type": "string"
        },
        "genre": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "track_cid": {
          "type": "string"
        },
        "preview_cid": {
          "type": "string"
        },
        "mood": {
          "type": "string"
        },
        "release_date": {
          "type": "string"
        },
        "remix_of": {
          "$ref": "#/definitions/full_remix_parent"
        },
        "repost_count": {
          "type": "integer"
        },
        "favorite_count": {
          "type": "integer"
        },
        "tags": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/user_full"
        },
        "duration": {
          "type": "integer"
        },
        "downloadable": {
          "type": "boolean"
        },
        "play_count": {
          "type": "integer"
        },
        "permalink": {
          "type": "string"
        },
        "is_streamable": {
          "type": "boolean"
        },
        "blocknumber": {
          "type": "integer"
        },
        "create_date": {
          "type": "string"
        },
        "cover_art_sizes": {
          "type": "string"
        },
        "cover_art_cids": {
          "$ref": "#/definitions/cover_art"
        },
        "created_at": {
          "type": "string"
        },
        "credits_splits": {
          "type": "string"
        },
        "download": {
          "$ref": "#/definitions/download_metadata"
        },
        "isrc": {
          "type": "string"
        },
        "license": {
          "type": "string"
        },
        "iswc": {
          "type": "string"
        },
        "field_visibility": {
          "$ref": "#/definitions/field_visibility"
        },
        "followee_reposts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/repost"
          }
        },
        "has_current_user_reposted": {
          "type": "boolean"
        },
        "is_unlisted": {
          "type": "boolean"
        },
        "has_current_user_saved": {
          "type": "boolean"
        },
        "followee_favorites": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/favorite"
          }
        },
        "route_id": {
          "type": "string"
        },
        "stem_of": {
          "$ref": "#/definitions/stem_parent"
        },
        "track_segments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/track_segment"
          }
        },
        "updated_at": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        },
        "is_delete": {
          "type": "boolean"
        },
        "cover_art": {
          "type": "string"
        },
        "is_available": {
          "type": "boolean"
        },
        "is_premium": {
          "type": "boolean"
        },
        "premium_conditions": {
          "type": "object"
        },
        "premium_content_signature": {
          "$ref": "#/definitions/premium_content_signature"
        },
        "ai_attribution_user_id": {
          "type": "integer"
        },
        "audio_upload_id": {
          "type": "string"
        },
        "preview_start_seconds": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "track_artwork": {
      "properties": {
        "150x150": {
          "type": "string"
        },
        "480x480": {
          "type": "string"
        },
        "1000x1000": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "full_remix_parent": {
      "properties": {
        "tracks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/full_remix"
          }
        }
      },
      "type": "object"
    },
    "full_remix": {
      "required": [
        "has_remix_author_reposted",
        "has_remix_author_saved",
        "parent_track_id",
        "user"
      ],
      "properties": {
        "parent_track_id": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/user_full"
        },
        "has_remix_author_reposted": {
          "type": "boolean"
        },
        "has_remix_author_saved": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "user_full": {
      "required": [
        "album_count",
        "allow_ai_attribution",
        "associated_sol_wallets_balance",
        "associated_wallets_balance",
        "balance",
        "blocknumber",
        "created_at",
        "current_user_followee_follow_count",
        "does_current_user_follow",
        "does_current_user_subscribe",
        "erc_wallet",
        "followee_count",
        "follower_count",
        "handle",
        "handle_lc",
        "has_collectibles",
        "id",
        "is_available",
        "is_deactivated",
        "is_storage_v2",
        "is_verified",
        "name",
        "playlist_count",
        "repost_count",
        "spl_wallet",
        "supporter_count",
        "supporting_count",
        "total_audio_balance",
        "total_balance",
        "track_count",
        "updated_at",
        "wallet",
        "waudio_balance"
      ],
      "properties": {
        "album_count": {
          "type": "integer"
        },
        "artist_pick_track_id": {
          "type": "string"
        },
        "bio": {
          "type": "string"
        },
        "cover_photo": {
          "$ref": "#/definitions/cover_photo"
        },
        "followee_count": {
          "type": "integer"
        },
        "follower_count": {
          "type": "integer"
        },
        "does_follow_current_user": {
          "type": "boolean"
        },
        "handle": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "is_verified": {
          "type": "boolean"
        },
        "location": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "playlist_count": {
          "type": "integer"
        },
        "profile_picture": {
          "$ref": "#/definitions/profile_picture"
        },
        "repost_count": {
          "type": "integer"
        },
        "track_count": {
          "type": "integer"
        },
        "is_deactivated": {
          "type": "boolean"
        },
        "is_available": {
          "type": "boolean"
        },
        "erc_wallet": {
          "type": "string"
        },
        "spl_wallet": {
          "type": "string"
        },
        "supporter_count": {
          "type": "integer"
        },
        "supporting_count": {
          "type": "integer"
        },
        "total_audio_balance": {
          "type": "integer"
        },
        "balance": {
          "type": "string"
        },
        "associated_wallets_balance": {
          "type": "string"
        },
        "total_balance": {
          "type": "string"
        },
        "waudio_balance": {
          "type": "string"
        },
        "associated_sol_wallets_balance": {
          "type": "string"
        },
        "blocknumber": {
          "type": "integer"
        },
        "wallet": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "is_storage_v2": {
          "type": "boolean"
        },
        "creator_node_endpoint": {
          "type": "string"
        },
        "current_user_followee_follow_count": {
          "type": "integer"
        },
        "does_current_user_follow": {
          "type": "boolean"
        },
        "does_current_user_subscribe": {
          "type": "boolean"
        },
        "handle_lc": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "cover_photo_sizes": {
          "type": "string"
        },
        "cover_photo_cids": {
          "$ref": "#/definitions/cover_photo"
        },
        "cover_photo_legacy": {
          "type": "string"
        },
        "profile_picture_sizes": {
          "type": "string"
        },
        "profile_picture_cids": {
          "$ref": "#/definitions/profile_picture"
        },
        "profile_picture_legacy": {
          "type": "string"
        },
        "metadata_multihash": {
          "type": "string"
        },
        "has_collectibles": {
          "type": "boolean"
        },
        "playlist_library": {
          "$ref": "#/definitions/playlist_library"
        },
        "allow_ai_attribution": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "cover_photo": {
      "properties": {
        "640x": {
          "type": "string"
        },
        "2000x": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "profile_picture": {
      "properties": {
        "150x150": {
          "type": "string"
        },
        "480x480": {
          "type": "string"
        },
        "1000x1000": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "playlist_library": {
      "properties": {
        "contents": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "type": "object"
    },
    "cover_art": {
      "properties": {
        "150x150": {
          "type": "string"
        },
        "480x480": {
          "type": "string"
        },
        "1000x1000": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "download_metadata": {
      "required": [
        "is_downloadable",
        "requires_follow"
      ],
      "properties": {
        "cid": {
          "type": "string"
        },
        "is_downloadable": {
          "type": "boolean"
        },
        "requires_follow": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "field_visibility": {
      "properties": {
        "mood": {
          "type": "boolean"
        },
        "tags": {
          "type": "boolean"
        },
        "genre": {
          "type": "boolean"
        },
        "share": {
          "type": "boolean"
        },
        "play_count": {
          "type": "boolean"
        },
        "remixes": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "repost": {
      "required": [
        "repost_item_id",
        "repost_type",
        "user_id"
      ],
      "properties": {
        "repost_item_id": {
          "type": "string"
        },
        "repost_type": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "favorite": {
      "required": [
        "created_at",
        "favorite_item_id",
        "favorite_type",
        "user_id"
      ],
      "properties": {
        "favorite_item_id": {
          "type": "string"
        },
        "favorite_type": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "stem_parent": {
      "required": [
        "category",
        "parent_track_id"
      ],
      "properties": {
        "category": {
          "type": "string"
        },
        "parent_track_id": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "track_segment": {
      "required": [
        "duration",
        "multihash"
      ],
      "properties": {
        "duration": {
          "type": "number"
        },
        "multihash": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "premium_content_signature": {
      "properties": {
        "data": {
          "type": "string"
        },
        "signature": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "full_tracks_response": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/track_full"
          }
        }
      },
      "type": "object"
    },
    "trending_ids_response": {
      "properties": {
        "data": {
          "$ref": "#/definitions/trending_times_ids"
        }
      },
      "type": "object"
    },
    "trending_times_ids": {
      "properties": {
        "week": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/track_id"
          }
        },
        "month": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/track_id"
          }
        },
        "year": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/track_id"
          }
        }
      },
      "type": "object"
    },
    "track_id": {
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "track_favorites_response_full": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/user_full"
          }
        }
      },
      "type": "object"
    },
    "track_reposts_response_full": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/user_full"
          }
        }
      },
      "type": "object"
    },
    "stems_response": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stem_full"
          }
        }
      },
      "type": "object"
    },
    "stem_full": {
      "required": [
        "blocknumber",
        "category",
        "cid",
        "id",
        "parent_id",
        "user_id"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "parent_id": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "cid": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        },
        "blocknumber": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "remixes_response_full": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "$ref": "#/definitions/remixes_response"
        }
      },
      "type": "object"
    },
    "remixes_response": {
      "required": [
        "count"
      ],
      "properties": {
        "count": {
          "type": "integer"
        },
        "tracks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/track_full"
          }
        }
      },
      "type": "object"
    },
    "remixing_response": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/track_full"
          }
        }
      },
      "type": "object"
    },
    "full_playlist_response": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/playlist_full"
          }
        }
      },
      "type": "object"
    },
    "playlist_full": {
      "required": [
        "added_timestamps",
        "blocknumber",
        "favorite_count",
        "followee_favorites",
        "followee_reposts",
        "has_current_user_reposted",
        "has_current_user_saved",
        "id",
        "is_album",
        "is_delete",
        "is_image_autogenerated",
        "is_private",
        "playlist_contents",
        "playlist_name",
        "repost_count",
        "total_play_count",
        "track_count",
        "tracks",
        "user",
        "user_id"
      ],
      "properties": {
        "artwork": {
          "$ref": "#/definitions/playlist_artwork"
        },
        "description": {
          "type": "string"
        },
        "permalink": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "is_album": {
          "type": "boolean"
        },
        "is_image_autogenerated": {
          "type": "boolean"
        },
        "playlist_name": {
          "type": "string"
        },
        "playlist_contents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/playlist_added_timestamp"
          }
        },
        "repost_count": {
          "type": "integer"
        },
        "favorite_count": {
          "type": "integer"
        },
        "total_play_count": {
          "type": "integer"
        },
        "user": {
          "$ref": "#/definitions/user_full"
        },
        "blocknumber": {
          "type": "integer"
        },
        "created_at": {
          "type": "string"
        },
        "followee_reposts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/repost"
          }
        },
        "followee_favorites": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/favorite"
          }
        },
        "has_current_user_reposted": {
          "type": "boolean"
        },
        "has_current_user_saved": {
          "type": "boolean"
        },
        "is_delete": {
          "type": "boolean"
        },
        "is_private": {
          "type": "boolean"
        },
        "updated_at": {
          "type": "string"
        },
        "added_timestamps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/playlist_added_timestamp"
          }
        },
        "user_id": {
          "type": "string"
        },
        "tracks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/track_full"
          }
        },
        "cover_art": {
          "type": "string"
        },
        "cover_art_sizes": {
          "type": "string"
        },
        "cover_art_cids": {
          "$ref": "#/definitions/playlist_artwork"
        },
        "track_count": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "playlist_artwork": {
      "properties": {
        "150x150": {
          "type": "string"
        },
        "480x480": {
          "type": "string"
        },
        "1000x1000": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "playlist_added_timestamp": {
      "required": [
        "metadata_timestamp",
        "timestamp",
        "track_id"
      ],
      "properties": {
        "metadata_timestamp": {
          "type": "integer"
        },
        "timestamp": {
          "type": "integer"
        },
        "track_id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "full_playlist_tracks_response": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/track_full"
          }
        }
      },
      "type": "object"
    },
    "following_response": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/user_full"
          }
        }
      },
      "type": "object"
    },
    "full_trending_playlists_response": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/playlist_full"
          }
        }
      },
      "type": "object"
    },
    "full_user_response": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/user_full"
          }
        }
      },
      "type": "object"
    },
    "full_tracks": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/track_full"
          }
        }
      },
      "type": "object"
    },
    "full_reposts": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/activity_full"
          }
        }
      },
      "type": "object"
    },
    "activity_full": {
      "properties": {
        "timestamp": {
          "type": "string"
        },
        "item_type": {
          "type": "object"
        },
        "item": {
          "type": "object"
        }
      },
      "type": "object"
    },
    "track_library_response_full": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/track_activity_full"
          }
        }
      },
      "type": "object"
    },
    "track_activity_full": {
      "properties": {
        "timestamp": {
          "type": "string"
        },
        "item_type": {
          "type": "string"
        },
        "item": {
          "$ref": "#/definitions/track_full"
        }
      },
      "type": "object"
    },
    "collection_library_response_full": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/collection_activity_full"
          }
        }
      },
      "type": "object"
    },
    "collection_activity_full": {
      "properties": {
        "timestamp": {
          "type": "string"
        },
        "item_type": {
          "type": "string"
        },
        "item": {
          "$ref": "#/definitions/playlist_full_without_tracks"
        }
      },
      "type": "object"
    },
    "playlist_full_without_tracks": {
      "required": [
        "added_timestamps",
        "blocknumber",
        "favorite_count",
        "followee_favorites",
        "followee_reposts",
        "has_current_user_reposted",
        "has_current_user_saved",
        "id",
        "is_album",
        "is_delete",
        "is_image_autogenerated",
        "is_private",
        "playlist_contents",
        "playlist_name",
        "repost_count",
        "total_play_count",
        "track_count",
        "user",
        "user_id"
      ],
      "properties": {
        "artwork": {
          "$ref": "#/definitions/playlist_artwork"
        },
        "description": {
          "type": "string"
        },
        "permalink": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "is_album": {
          "type": "boolean"
        },
        "is_image_autogenerated": {
          "type": "boolean"
        },
        "playlist_name": {
          "type": "string"
        },
        "playlist_contents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/playlist_added_timestamp"
          }
        },
        "repost_count": {
          "type": "integer"
        },
        "favorite_count": {
          "type": "integer"
        },
        "total_play_count": {
          "type": "integer"
        },
        "user": {
          "$ref": "#/definitions/user_full"
        },
        "blocknumber": {
          "type": "integer"
        },
        "created_at": {
          "type": "string"
        },
        "followee_reposts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/repost"
          }
        },
        "followee_favorites": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/favorite"
          }
        },
        "has_current_user_reposted": {
          "type": "boolean"
        },
        "has_current_user_saved": {
          "type": "boolean"
        },
        "is_delete": {
          "type": "boolean"
        },
        "is_private": {
          "type": "boolean"
        },
        "updated_at": {
          "type": "string"
        },
        "added_timestamps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/playlist_added_timestamp"
          }
        },
        "user_id": {
          "type": "string"
        },
        "tracks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/track_full"
          }
        },
        "cover_art": {
          "type": "string"
        },
        "cover_art_sizes": {
          "type": "string"
        },
        "cover_art_cids": {
          "$ref": "#/definitions/playlist_artwork"
        },
        "track_count": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "history_response_full": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/activity_full"
          }
        }
      },
      "type": "object"
    },
    "full_subscribers_response": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/user_full"
          }
        }
      },
      "type": "object"
    },
    "full_bulk_subscribers_response": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/user_subscribers"
          }
        }
      },
      "type": "object"
    },
    "user_subscribers": {
      "required": [
        "user_id"
      ],
      "properties": {
        "user_id": {
          "type": "string"
        },
        "subscriber_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "full_followers_response": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/user_full"
          }
        }
      },
      "type": "object"
    },
    "following_response_full": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/user_full"
          }
        }
      },
      "type": "object"
    },
    "related_artist_response_full": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/user_full"
          }
        }
      },
      "type": "object"
    },
    "top_genre_users_response_full": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/user_full"
          }
        }
      },
      "type": "object"
    },
    "top_users_response_full": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/user_full"
          }
        }
      },
      "type": "object"
    },
    "full_get_supporters": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/full_supporter"
          }
        }
      },
      "type": "object"
    },
    "full_supporter": {
      "required": [
        "amount",
        "rank",
        "sender"
      ],
      "properties": {
        "rank": {
          "type": "integer"
        },
        "amount": {
          "type": "string"
        },
        "sender": {
          "$ref": "#/definitions/user_full"
        }
      },
      "type": "object"
    },
    "full_get_supporter": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "$ref": "#/definitions/full_supporter"
        }
      },
      "type": "object"
    },
    "full_get_supporting": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "$ref": "#/definitions/full_supporting"
        }
      },
      "type": "object"
    },
    "full_supporting": {
      "required": [
        "amount",
        "rank",
        "receiver"
      ],
      "properties": {
        "rank": {
          "type": "integer"
        },
        "amount": {
          "type": "string"
        },
        "receiver": {
          "$ref": "#/definitions/user_full"
        }
      },
      "type": "object"
    },
    "users_by_content_node": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "$ref": "#/definitions/user_replica_set"
        }
      },
      "type": "object"
    },
    "user_replica_set": {
      "required": [
        "user_id",
        "wallet"
      ],
      "properties": {
        "user_id": {
          "type": "integer"
        },
        "wallet": {
          "type": "string"
        },
        "primary": {
          "type": "string"
        },
        "secondary1": {
          "type": "string"
        },
        "secondary2": {
          "type": "string"
        },
        "primarySpID": {
          "type": "integer"
        },
        "secondary1SpID": {
          "type": "integer"
        },
        "secondary2SpID": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "purchases_response": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/purchase"
          }
        }
      },
      "type": "object"
    },
    "purchase": {
      "required": [
        "amount",
        "buyer_user_id",
        "content_id",
        "content_type",
        "created_at",
        "extra_amount",
        "seller_user_id",
        "signature",
        "slot",
        "updated_at"
      ],
      "properties": {
        "slot": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "seller_user_id": {
          "type": "string"
        },
        "buyer_user_id": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        },
        "extra_amount": {
          "type": "string"
        },
        "content_type": {
          "type": "string"
        },
        "content_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      },
      "discriminator": "content_type",
      "type": "object"
    },
    "purchases_count_response": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "transaction_history_response": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/transaction_details"
          }
        }
      },
      "type": "object"
    },
    "transaction_details": {
      "required": [
        "balance",
        "change",
        "metadata",
        "method",
        "signature",
        "transaction_date",
        "transaction_type",
        "user_bank"
      ],
      "properties": {
        "transaction_date": {
          "type": "string"
        },
        "transaction_type": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "signature": {
          "type": "string"
        },
        "user_bank": {
          "type": "string"
        },
        "change": {
          "type": "string"
        },
        "balance": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        }
      },
      "discriminator": "transaction_type",
      "type": "object"
    },
    "transaction_history_count_response": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "search_full_response": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "$ref": "#/definitions/search_model"
        }
      },
      "type": "object"
    },
    "search_model": {
      "required": [
        "albums",
        "playlists",
        "tracks",
        "users"
      ],
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/user_full"
          }
        },
        "followed_users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/user_full"
          }
        },
        "tracks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/track_full"
          }
        },
        "saved_tracks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/track_full"
          }
        },
        "playlists": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/playlist_full"
          }
        },
        "saved_playlists": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/playlist_full"
          }
        },
        "albums": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/playlist_full"
          }
        },
        "saved_albums": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/playlist_full"
          }
        }
      },
      "type": "object"
    },
    "search_autocomplete_response": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "$ref": "#/definitions/search_model"
        }
      },
      "type": "object"
    },
    "get_tips_response": {
      "required": [
        "latest_chain_block",
        "latest_chain_slot_plays",
        "latest_indexed_block",
        "latest_indexed_slot_plays",
        "signature",
        "timestamp",
        "version"
      ],
      "properties": {
        "latest_chain_block": {
          "type": "integer"
        },
        "latest_indexed_block": {
          "type": "integer"
        },
        "latest_chain_slot_plays": {
          "type": "integer"
        },
        "latest_indexed_slot_plays": {
          "type": "integer"
        },
        "signature": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/version_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/full_tip"
          }
        }
      },
      "type": "object"
    },
    "full_tip": {
      "required": [
        "amount",
        "created_at",
        "followee_supporters",
        "receiver",
        "sender",
        "slot",
        "tx_signature"
      ],
      "properties": {
        "amount": {
          "type": "string"
        },
        "sender": {
          "$ref": "#/definitions/user_full"
        },
        "receiver": {
          "$ref": "#/definitions/user_full"
        },
        "created_at": {
          "type": "string"
        },
        "slot": {
          "type": "integer"
        },
        "followee_supporters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/supporter_reference"
          }
        },
        "tx_signature": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "supporter_reference": {
      "required": [
        "user_id"
      ],
      "properties": {
        "user_id": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "responses": {
    "ParseError": {
      "description": "When a mask can't be parsed"
    },
    "MaskError": {
      "description": "When any error occurs on mask"
    }
  }
}
